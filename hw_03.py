from random import randint, randrange, sample, choices, seed

seed(0)

"""
1. В диапазоне натуральных чисел от 2 до 99 определить, сколько из них кратны каждому из чисел в диапазоне от 2 до 9.
2. Во втором массиве сохранить индексы четных элементов первого массива.
Например, если дан массив со значениями 8, 3, 15, 6, 4, 2, то во второй массив надо заполнить значениями 1, 4, 5, 6
(или 0, 3, 4, 5 - если индексация начинается с нуля), т.к. именно в этих позициях первого массива стоят четные числа.
3. В массиве случайных целых чисел поменять местами минимальный и максимальный элементы.
4. Определить, какое число в массиве встречается чаще всего.
5. В массиве найти максимальный отрицательный элемент. Вывести на экран его значение и позицию в массиве.
6. В одномерном массиве найти сумму элементов, находящихся между минимальным
и максимальным элементами. Сами минимальный и максимальный элементы в сумму не включать.
7. В одномерном массиве целых чисел определить два наименьших элемента.
Они могут быть как равны между собой (оба являться минимальными), так и различаться.
8. Матрица 5x4 заполняется вводом с клавиатуры кроме последних элементов строк.
Программа должна вычислять сумму введенных элементов каждой строки и записывать ее в последнюю ячейку строки.
В конце следует вывести полученную матрицу.
9. Найти максимальный элемент среди минимальных элементов столбцов матрицы.
"""


print('''
1. В диапазоне натуральных чисел от 2 до 99 определить, сколько из них кратны каждому из чисел в диапазоне от 2 до 9.
''')

result = {}

for i in range(2, 10):
    result[i] = [j for j in range(2, 100) if not j % i]
    print(f'{i} multiples: {len(result[i])} numbers\n{result[i]}')

print('''
2. Во втором массиве сохранить индексы четных элементов первого массива.
Например, если дан массив со значениями 8, 3, 15, 6, 4, 2, то во второй массив надо заполнить значениями 1, 4, 5, 6
(или 0, 3, 4, 5 - если индексация начинается с нуля), т.к. именно в этих позициях первого массива стоят четные числа.
''')

lst1 = [8, 3, 15, 6, 4, 2]
lst2 = [lst1.index(i) for i in lst1 if i % 2 == 0]
print(lst2)

print('''
3. В массиве случайных целых чисел поменять местами минимальный и максимальный элементы.
''')

lst = list(randint(100, 1000) for _ in range(10))

print(f'initial list:\n{lst}')

max_v = lst[0]
min_v = lst[0]

for i in lst:
    if i > max_v:
        max_v = i
    elif i < min_v:
        min_v = i
min_index = lst.index(min_v)
max_index = lst.index(max_v)
lst[min_index], lst[max_index] = lst[max_index], lst[min_index]

print(f'{min_index = } and {max_index = }')
print(f'final list:\n{lst}')

print('''
4. Определить, какое число в массиве встречается чаще всего.
''')

lst = list(randint(10, 15) for _ in range(15))
count = 1
num = None

print(f'initial list:\n{lst}')

for i in lst:
    if lst.count(i) > count:
        num = i

print(f'the most common number = {num}')

print('''
5. В массиве найти максимальный отрицательный элемент. Вывести на экран его значение и позицию в массиве.
''')

lst = sample(range(-99, 99), 20)
index = 0

print(f'{lst}')

for i in lst:
    if 0 > i > lst[index]:
        index = lst.index(i)

if lst[index] >= 0:
    print(f'none')
else:
    print(f'{lst[index]} on position {index}')

print('''
6. В одномерном массиве найти сумму элементов, находящихся между минимальным
и максимальным элементами. Сами минимальный и максимальный элементы в сумму не включать.
''')

lst = sample(range(10, 99), 20)
max_ind, min_ind = 0, 0

for i in range(len(lst)):
    if lst[i] > lst[max_ind]:
        max_ind = i
    elif lst[i] < lst[min_ind]:
        min_ind = i

print(lst)
print('sum =', sum(lst[min(min_ind, max_ind) + 1:max(min_ind, max_ind)]))

print('''
7. В одномерном массиве целых чисел определить два наименьших элемента.
Они могут быть как равны между собой (оба являться минимальными), так и различаться.
''')

lst = choices(range(10, 99), k=20)

print(lst)

lst.sort()

print(f'numbers is: {lst[0]} and {lst[1]}')

print('\nРешение через цикл:\n')
lst = [randint(1, 99) for _ in range(15)]
min1, min2 = lst[0], lst[1]

for i in range(len(lst)):
    if lst[i] <= min1:
        min1 = lst[i]
    elif lst[i] <= min2:
        min2 = lst[i]

print(lst, f'{min1 = } {min2 = }')

print('''
8. Матрица 5x4 заполняется вводом с клавиатуры кроме последних элементов строк.
Программа должна вычислять сумму введенных элементов каждой строки и записывать ее в последнюю ячейку строки.
В конце следует вывести полученную матрицу.

+

9. Найти максимальный элемент среди минимальных элементов столбцов матрицы.
''')

M = 5
N = 4
a = []
for i in range(N):
    b = []
    for j in range(M):
        b.append(int(randint(0, 9)))
        print('%3d' % b[j], end='')
    a.append(b)
    print("   |", sum(b))

for i in range(M):
    print(' --', end='')
print()

# Находим максимальный элемент

for i in range(M):
    s = 0
    for j in range(N):
        if a[j][i] > s:
            s = a[j][i]
    print('%3d' % s, end='')
print()
