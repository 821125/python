"""
1. Найти сумму и произведение цифр трехзначного числа, которое вводит пользователь.
2. Выполнить логические побитовые операции «И», «ИЛИ» и др. над числами 5 и 6. Выполнить над числом 5 побитовый сдвиг
вправо и влево на два знака. Объяснить полученный результат.
3. По введенным пользователем координатам двух точек вывести уравнение прямой вида y=kx+b, проходящей через эти точки.
4. Написать программу, которая генерирует в указанных пользователем границах:
случайное целое число;
случайное вещественное число;
случайный символ.
Для каждого из трех случаев пользователь задает свои границы диапазона. Например, если надо получить случайный
символ от 'a' до 'f', то вводятся эти символы. Программа должна вывести на экран любой символ алфавита
от 'a' до 'f' включительно.
5. Пользователь вводит две буквы. Определить, на каких местах алфавита они стоят и сколько между ними находится букв.
6. Пользователь вводит номер буквы в алфавите. Определить, какая это буква.
7. По длинам трех отрезков, введенных пользователем, определить возможность существования треугольника,
составленного из этих отрезков. Если такой треугольник существует, то определить, является ли он разносторонним,
равнобедренным или равносторонним.
8. Определить, является ли год, который ввел пользователем, високосным или невисокосным.
9. Вводятся три разных числа. Найти, какое из них является средним (больше одного, но меньше другого).
"""
import random
import sys

print('1. Найти сумму и произведение цифр трехзначного числа, которое вводит пользователь.')

num = input('Введите трехзначное число: ')
if len(num) == 3 and num.isdigit():
    a, b, c = map(int, num)
    print(f'{a + b + c = }\n{a * b * c = }')
else:
    print('Введены некорректные данные')
    sys.exit()

print('''
2. Выполнить логические побитовые операции «И», «ИЛИ» и др. над числами 5 и 6. Выполнить над числом 5
побитовый сдвиг вправо и влево на два знака. Объяснить полученный результат.

Битовые операторы работают следующим образом. Берутся два операнда,
и к каждой паре соответствующих бит для левого и правого операнда применяется данная операция,
результатом будет переменная того же типа, каждый бит которой есть результат применения
соответствующей логической операции к соответствующим битам двух операндов.
''')

a, b = 5, 6  # a = 0b101, b = 0b110

print(f'a = {a}  # a = 0b101\nb = {b}  # b = 0b110\n')
print(f'{a & b = }  # 0b100 == 4 - битовое И(AND))')
print(f'{a | b = }  # 0b111 == 7 - битовое ИЛИ(OR))')
print(f'{a ^ b = }  # 0b11 == 3 - битовое ИСКЛЮЧАЮЩЕЕ ИЛИ(XOR)')
print(f'  {~ a = }  # 0b1...11111010 == -6 - битовое ОТРИЦАНИЕ(NOT) - унарная операция\n')
print('''Битовое отрицание числа (оследний пример) — это число,
полученное из исходного заменой всех нулей на единицы и наоборот.
Применение побитового отрицания к неотрицательному числу даст отрицательное число,
что связано с особенностями представления отрицательных чисел в виде дополнительного кода.''')
print('Побитовый сдвиг:\n')
print(f'{bin(a) = }')        # a = 0b101
print(f'{int(0b1) = }')      # a >> 2 = 0b1
print(f'{bin(b) = }')        # b = 0b110
print(f'{int(0b10100) = }')  # a >> 2 = 0b10100
print(f'{a >> 2 = }')        # Результат = 1
print(f'{a // 2 ** 2 = }')   # Результат = 1
print('''Оператор a >> 2 возвращает число, которое получается из a сдвигом всех бит на 2 позиций вправо
для положительных чисел битовый сдвиг числа вправо на n равносилен целочисленному делению на 2**n
и осуществляется при помощи оператора >>
Для отрицательных чисел в языке Питон операции битового сдвига неприменимы''')
print(f'{a << 2 = }')      # Результат = 20
print(f'{a * 2 ** 2 = }')  # Результат = 20
print('''Оператор a >> 2 возвращает число, которое получается из a сдвигом всех бит на 2 позиций влево
битовый сдвиг влево на n бит равносилен (для положительных чисел) умножению на 2**n
и осуществляется при помощи оператора <<
''')

print('''3. По введенным пользователем координатам двух точек
вывести уравнение прямой вида y=kx+b, проходящей через эти точки.
''')

print('Координаты точки A(x1;y1):')
x1 = float(input("\tx1 = "))
y1 = float(input("\ty1 = "))

print('Координаты точки B(x2;y2):')
x2 = float(input("\tx2 = "))
y2 = float(input("\ty2 = "))

print('Уравнение прямой, проходящей через эти точки:')
k = (y1 - y2) / (x1 - x2)
b = y2 - k * x2
print(' y = %.2fx + %.2f' % (k, b))

print('''
4. Написать программу, которая генерирует в указанных пользователем границах:
случайное целое число;
случайное вещественное число;
случайный символ.
Для каждого из трех случаев пользователь задает свои границы диапазона. Например, если надо получить случайный
символ от 'a' до 'f', то вводятся эти символы. Программа должна вывести на экран любой символ алфавита
от 'a' до 'f' включительно.
''')

select = int(input('''Для генерации случайного значения
введите цифру соответствующую вашему выбору:
1. Случайное целое число
2. Случайное вещественное число
3. Случайный символ
'''))

if select in (1, 2, 3):
    a, b = input('Введите границы диапазона через пробел (a b): ').split()

    if select == 1 and a.isdigit() and b.isdigit():
        a, b = sorted(map(int, (a, b)))
        print(random.randint(a, b))
    elif select == 2:
        try:
            a, b = sorted(map(float, (a, b)))
            print(random.uniform(a, b))
        except ValueError:
            print('ошибка ввода')
            sys.exit()
    elif select == 3 and a.islower() and b.islower():
        a, b = sorted(map(ord, (a, b)))
        print(chr(random.randint(a, b)))

else:
    print('ошибка ввода')
    sys.exit()

print('''
5. Пользователь вводит две буквы. Определить, на каких местах алфавита они стоят и сколько между ними находится букв.
''')

a, b = input('Введите первую букву (кирилица): ').lower(), input('Введите вторую букву (кирилица): ').lower()

try:
    if ord(a) and ord(b) not in range(1072, 1104):
        print('введены некорректные данные')
        sys.exit()
    else:
        print(f'Буква {a} стоит на {ord(a) - 1071} позиции\nБуква {b} стоит на {ord(b) - 1071} позиции')
        print(f'Между буквами {abs((ord(a) - 1071) - (ord(b) - 1071)) - 1} букв')
except TypeError:
    print('введены некорректные данные')
    sys.exit()

print('''
6. Пользователь вводит номер буквы в алфавите. Определить, какая это буква.
''')

letter = int(input('Введите порядковый номер буквы в алфавите (кирилица): '))
if letter not in range(1, 33):
    print('введены некорректные данные')
else:
    print(f'Это буква {chr(1071 + letter)}')

print('''
7. По длинам трех отрезков, введенных пользователем, определить возможность существования треугольника,
составленного из этих отрезков. Если такой треугольник существует, то определить, является ли он разносторонним,
равнобедренным или равносторонним.
''')

print('Последовательно введите длинны трех сторон треугольника\n')
try:
    a, b, c = (int(input('Введите длинну стороны: ')) for _ in 'abc')
except ValueError:
    print('ошибка ввода')
    sys.exit()

if a + b <= c or a + c <= b or b + c <= a:
    print("\nТреугольник не существует")
elif a != b and a != c and b != c:
    print("\nРазносторонний")
elif a == b == c:
    print("\nРавносторонний")
else:
    print("\nРавнобедренный")

print('''
8. Определить, является ли год, который ввел пользователем, високосным или невисокосным.
''')

try:
    year = int(input('Введите год: '))
except ValueError:
    print('ошибка ввода')
    sys.exit()

if year % 4 == 0 and year % 100 != 0:
    print('високосный')
else:
    print('обычный')

print('''
9. Вводятся три разных числа. Найти, какое из них является средним (больше одного, но меньше другого).
''')

a, b, c = map(int, input('Введите три числа через пробел (a b c): ').split())

# Решение 1
if c > a > b:
    print(a)
elif b > c > a:
    print(c)
else:
    print(b)

# Решение 2
print(a if c > a > b else c if b > c > a else b)
